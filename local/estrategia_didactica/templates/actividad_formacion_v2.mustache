{{> local_estrategia_didactica/tabs }}
<div style="margin-bottom:22px;">
  <p >
    <span id="nombre">Nombre Actividad:</span>
    <span>Lorem ipsum dolor sit amet</span>
  <p>
    <span>Descripcion:</span>
    <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span>
  </p>
</div>
<div class="container" style="margin-left:0;width:100%;">
  <div style="float:left;width: 49%;margin-right:2%;">
    <video
        style="width:100%"
        id="my-player"
        class="video-js"
        controls
        height="300"
        preload="auto"
        data-setup='{"playbackRates": [1, 1.5, 2]}'>

        <source data-res="144" src="{{components.video.videourl}}" type="video/mp4" label='144'/>
        <track src="media/subs_en.vtt" srclang="en" label="English" kind="subtitles" type="text/vtt">
        <track src="media/subs_es.vtt" srclang="es" label="Spanish" kind="subtitles" type="text/vtt">
        <p class="vjs-no-js">
          To view this video please enable JavaScript, and consider upgrading to a
          web browser that
          <a href="http://videojs.com/html5-video-support/" target="_blank">
            supports HTML5 video
          </a>
        </p>
    </video>
    <div id="transcript" style="width:100%;margin-top: 15px;">
    </div>
  </div>
  <div style="width: 49%;float: right;">
    <div id="pdf-view">
      <div id="titlebar">
        <div id="documentName">prueba.pdf</div>
      </div>
      <div id="canvasContainer">
        <canvas id="the-canvas"></canvas>
      </div>
      <div id="toolbarContainer">
        <div id="toolbar">
          <div id="toolbarLeft">
            <div id="navButtons" class="splitToolbarButton">
              <button id="prev" class="toolbarButton pageUp" title="Previous Page"></button>
              <div class="splitToolbarButtonSeparator"></div>
                <button id="next" class="toolbarButton pageDown" title="Next Page"></button>
            </div>
            <label id="pageNumberLabel" class="toolbarLabel" for="pageNumber">Pagina:</label>
            <input type="text" id="page_num" onkeypress="runScript(event)" class="toolbarField pageNumber">
            <span class="toolbarLabel"> de <span id="page_count" class="toolbarLabel"></span></span>
          </div>
        </div>
      </div>
     </div>
  </div>

</div>

{{#js}}
var video = videojs('my-player');
var options = {
  showTitle: false,
  showTrackSelector: true,
};
var transcript = video.transcript(options);
/*VISUALIZADOR*/


// If absolute URL from the remote server is provided, configure the CORS
// header on that server.
var url = '{{components.presentacion.viewerurl}}';

// The workerSrc property shall be specified.
PDFJS.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.js';

var pdfDoc = null,
    pageNum = 1,
    pageRendering = false,
    pageNumPending = null,
    scale = 0.8,
    canvas = document.getElementById('the-canvas'),
    ctx = canvas.getContext('2d');

/**
 * Get page info from document, resize canvas accordingly, and render page.
 * @param num Page number.
 */
function renderPage(num) {
  pageNum=num;
  pageRendering = true;
  // Using promise to fetch the page
  pdfDoc.getPage(num).then(function(page) {
    var viewport = page.getViewport(scale);
    canvas.height = viewport.height;
    canvas.width = viewport.width;

    // Render PDF page into canvas context
    var renderContext = {
      canvasContext: ctx,
      viewport: viewport
    };
    var renderTask = page.render(renderContext);

    // Wait for rendering to finish
    renderTask.promise.then(function() {
      pageRendering = false;
      if (pageNumPending !== null) {
        // New page rendering is pending
        renderPage(pageNumPending);
        pageNumPending = null;
      }
    });
  });

  // Update page counters
  document.getElementById('page_num').value = pageNum;
}

/**
 * If another page rendering in progress, waits until the rendering is
 * finised. Otherwise, executes rendering immediately.
 */
function queueRenderPage(num) {
  if (pageRendering) {
    pageNumPending = num;
  } else {
    renderPage(num);
  }
}

/**
 * Displays previous page.
 */
function onPrevPage() {
  if (pageNum <= 1) {
    return;
  }
  pageNum--;
  queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);

/**
 * Displays next page.
 */
function onNextPage() {
  if (pageNum >= pdfDoc.numPages) {
    return;
  }
  pageNum++;
  queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);

/**
 * Asynchronously downloads PDF.
 */
PDFJS.getDocument(url).then(function(pdfDoc_) {
  pdfDoc = pdfDoc_;
  document.getElementById('page_count').textContent = pdfDoc.numPages;

  // Initial/first page rendering
  renderPage(pageNum);
});

function runScript(e) {
  if (e.keyCode == 13) {
    var tb = document.getElementById("page_num");
    var a = parseInt(tb.value);
    renderPage(a);

  }
}
video.ready(function() {
    $("div.vjs-control-bar").css("background-color","rgba(15, 39, 158, 0.82)");
    $("ul.vjs-menu-content").css("background-color","rgba(15, 39, 158, 0.82)");
    $(".vjs-control").css("color","#e0e0e0");
    $("div.vjs-play-progress").css("background-color","#fff");
    //$("div.video-js").css({"height":data.video.height,"width":data.video.width});

    $("#titlebar").css("background-image","url(img/texture.png), -webkit-linear-gradient(rgba(15, 39, 158, 0.82),rgba(15, 39, 158, 0.82))");
    $("#toolbarContainer").css("background-image","url(img/texture.png), -webkit-linear-gradient(rgba(15, 39, 158, 0.82),rgba(15, 39, 158, 0.82))");
    //$("#the-canvas").css("width",data.presentacion.width);
    $('#documentName').css("color","#F2F2F2");
    $('.toolbarLabel').css("color","#F2F2F2");
    $('#page_num').css("color","#F2F2F2");

    // Initialize the plugin.
    var transcript = video.transcript(options);
    // Then attach the widget to the page.
    var transcriptContainer = document.querySelector('#transcript');
    transcriptContainer.appendChild(transcript.el());
});
{{/js}}
